for(i in vecX) if(i>4) break else print(i)
f <- function(x,y){z<-x*y,return(z)}
f <- function(x,y){z<-x*y;return(z)}
f(2,3)
save.image()
fnFactorial(3)
# R function to find the factorial of a given number
# author: Asif Bhuyan
# date: 23/07/19
fnFactorial<-function(num){
fact <- 1
i <- 1
while(num>0){
fact<- fact * i
}
return(fact)
}
fnFactorial(3)
num<-num-1
# R function to find the factorial of a given number
# author: Asif Bhuyan
# date: 23/07/19
fnFactorial<-function(num){
fact <- 1
i <- 1
while(num>0){
fact<- fact * i
i<-i+1
num<-num-1
}
return(fact)
}
fnFactorial(3)
fnFactorial(12)
fnFactorial(124)
fnFactorial(1256788)
fnFactorial(1256)
fnFactorial(125)
fnFactorial(3)
vecA<-c(1,2)
vecA
vecA<-c(3)
vecA
vecA<-c(1,2)
vecA
vecA<-c(vecA,3)
vecA
return(fib)
fnFibonacci<- function(n){
first <- 0
second <- 1
i <- 3
sum <- 0
fib <- c(first,second)
while(i<=n){
sum <- first + second
fib <- c(fib,sum)
first <- second
second <- sum
}
return(fib)
}
fnFibonacci(4)
fnFibonacci<- function(n){
first <- 0
second <- 1
i <- 3
sum <- 0
fib <- c(first,second)
while(i<=n){
sum <- first + second
fib <- c(fib,sum)
first <- second
second <- sum
i <- i+1
}
return(fib)
}
fnFibonacci(4)
fnFibonacci(7)
return(y)
fnStraightline<-function(x,m,c){
y<-m*x + c
return(y)
}
fnStraightline<-function(x,m,c){
y<-m*x + c
return(y)
}
stlX<-c(3,5)
fnStraightline(stlX,2,3)
vecX
vecZ
for(i in vecX) vecZ<- vecX + 1
vecZ
for(i in vecX) vecZ<- C(vecZ,i + 1)
for(i in vecX) a<- i+1;vecZ<- C(vecZ,a)
for(i in vecX) a<- i+1 vecZ<- C(vecZ,a)
for(i in vecX) {a<- i+1 vecZ<- C(vecZ,a)
for(i in vecX) {a<- i+1
vecZ<- C(vecZ,a)
}
for(i in vecX) print i
for(i in vecX) print(i)
vecX
vec <- for(i in vecX) print(i)
vec
vec <- for(i in vecX) i
vec
vec <- for(i in vecX) vecZ<-i+1
vec
vecZ
vec <- for(i in vecX) vecZ<-c(vecZ,i+1)
vecZ
vec <- for(i in vecX) vecZ<-c(vecZ,i+1)
vecZ
num < - 5
num <- 5
numlist<-seq(1,num,1)
numlist
R.version
x<-12
x
ls()
x<-x+3
x
x
getwd()
setwd("D:/180970096")
getwd()
rm(x)
x
vecx<-c(1,2,3)
vecx
vecx<-c(1,2,"3")
vecx
vecx
vecx<-c(1,2,3)
vecx
len=length(vecx)
len
length(vecx)
sqrt(vecx)
vecy<-sqrt(vecx)
vecz=c(-2, 0, 1)
vecz=sqrt(vecz)
rm(vecz)
vecx
vecy
a=c(1,2,3)
b=c(1,2,3,4,5)
a+b
help(c)
?c
letters[1:4]
letters[25:29]
?names
seq(1,100,10)
seq(1,101,10)
seq(1,-101,10)
seq(101,10,10)
sq
c(1:100)
c(1:100)
?r
?c
?names
seq()
?names
ls
ls()
vecx>3
vecx
vecx=3
vecx
vecx<-c(1:3)
vecx<2
a<-vecx<2
a
vecz<-seq(10,200,10)
vecz
vecz>10&&>100
vecz>10 && >100
vecz >10 && >100
vecz >10 && vecz>100
vecz >10 & vecz>100
vecz>10 &>100
vecz>10 & vecz>100
vecx=c(1:10)
vecx
vecx>3
ix=vecx>3
ix
rm(ix)
idx=vecx>3
vecx[idx]
vecx[vecx>3]
vecx[vecx%3]
vecx[vecx/3]
vecx
vecx[vecx>3&vecx<6]
vecx[2:4]
vecx[20:40]
vecx[2:4]
vecx[-2:4]
vecx[- 2:4]
vecx[-(2:4)]
mata=c(1:9)
mata
?dim
dim(mata)<-c(3,3)
mata
dim(mata)
length(mata)
c(3,3)
matb=matrix(mata,3,3)
matb
matb=matrix(mata,3,3,byrow=TRUE)
matb
dim(mata)
dim(matb)
mata
matb
mata+matb
mata-mata
matb-mata
mata%*%matb
mata
matb
mata%+%matb
mata%*%matb
matc=mata%*%matb
diag(matc)
matc
t(matc)
mata
t(mata)
transpose(mata)
?nrow
nrow(mata)
nrow(matb)
ncol(matb)
?matrix
savehistory("D:/180970096/hist.txt")
?names
gender<-c(M,F,M,M,F)
gender<-c(M,F,M,M,'F')
gender<-c('M','F','M','M','F')
gender
weight=c(72,83,91,67,54)
height=c(120,110,95,132,140)
dataset=data.frame(gender,weight,height)
dataset
save.image("D:/180970096/vars.RData")
dataset[2,4]
dataset[2:4]
dataset[2,4]
dataset[2,3]
dataset[2,2]
dataset$gender
dataset$weight
dataset
dataset$weight
dataset$weight[dataset$gender='F']
dataset$weight[dataset$gender=='F']
dataset$weight[dataset$gender<'F']
dataset$weight[dataset$gender>'F']
dataset$weight[dataset$gender=='F']
?==
diag(dataset)
diag(mata)
mata\
mata
names(dataset)
dataset
dim(dataset)
?load
?save
?function
;
?whil
}
?while
;
fact=fact*n
return(f)
f<-1
return(f);
return(f)
n<-n-1
fn_fact <- function(n) {
if(n<=1) {
return(1)
}
f<-1
while(n>1) {
f<-f*n
n<-n-1
}
return(f)
}
;
fn_fact <- function(n) {
if(n<=1) {
return(1)
}
f<-1
while(n>1) {
f<-f*n
n<-n-1
}
return(f)
}
n<-12
;
?fn_fact
fn_fact(5)
?fact
return(1)
if(n<=1) {
return(1)
}
;
f<-1
while(n>1) {
f<-f*n
n<-n-1
}
fn_fact <- function(n) {
if(n<=1) {
return(1)
}
f<-1
while(n>1) {
f<-f*n
n<-n-1
}
return(f)
}
fn_fact(6)
d[1]=12
d=c()
d[1]=12
d
d[3]=23
d
rm(d)
d=dim(3)
d
d[0]=1
d
d[1]=34
d
d[2]=44
d
d[4]=2
d
while(i<=n) {
terms[i]<-b
a<-b
b<-a+b
}
fibn <- function(a,b,n) {
terms[]<-c(a)
i<-1
while(i<=n) {
terms[i]<-b
a<-b
b<-a+b
}
return(terms)
}
fibn(0,1,5)
d<-c(2)
d
b<-a+b
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
terms[i]<-b
a<-b
b<-a+b
}
return(terms)
}
fibn(0,1,5)
a<-2
a<=3
a<=2
a<=1
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
print(i)
terms[i]<-b
a<-b
b<-a+b
}
return(terms)
}
fibn(0,1,5)
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
print(i)
terms[i]<-b
a<-b
b<-a+b
i++
}
return(terms)
}
i<=i+1
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
print(i)
terms[i]<-b
a<-b
b<-a+b
i<=i+1
}
return(terms)
}
fibn(0,1,5)
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
print(i)
terms[i]<-b
a<-b
b<-a+b
i<-i+1
}
return(terms)
}
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
print(i)
terms[i]<-b
a<-b
b<-a+b
i<-i+1
}
return(terms)
}
fibn(0,1,5)
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
# print(i)
i<-i+1
terms[i]<-b
a<-b
b<-a+b
}
return(terms)
}
fibn(0,1,5)
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<=n) {
# print(i)
i<-i+1
terms[i]<-b
tmp=a+b
a<-b
b<-tmp
}
return(terms)
}
fibn(0,1,5)
fibn <- function(a,b,n) {
terms<-c(a)
i<-1
while(i<n) {
# print(i)
i<-i+1
terms[i]<-b
tmp=a+b
a<-b
b<-tmp
}
return(terms)
}
fibn(0,1,5)
fibn(0,1,10)
stln <- function(m,x,c) {
return(m*x+c)
}
stln(3,5,6)
x=2
y=stln(4,x,6)
plot(x,y)
y
x
y=stln(1,x,3)
x
y
plot(x,y)
savehistory("D:/180970096/hist.txt")
save.image("D:/180970096/vars.RData")
savehistory("D:/180970096/hist2.Rhistory")
